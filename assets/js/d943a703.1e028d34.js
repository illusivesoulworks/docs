"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[8574],{1315:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"curios/getting-started","title":"Setting Up the Development Environment","description":"A tutorial on how to set up your development workspace to work with Curios API interfaces and methods.","source":"@site/docs/curios/getting-started.md","sourceDirName":"curios","slug":"/curios/getting-started","permalink":"/curios/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/getting-started.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Curios","permalink":"/category/curios"},"next":{"title":"Slots","permalink":"/category/slots"}}');var s=t(4848),o=t(8453);const r={sidebar_position:1},d="Setting Up the Development Environment",l={},c=[{value:"Set up your build script",id:"set-up-your-build-script",level:2},{value:"Add repository",id:"add-repository",level:3},{value:"Add dependencies",id:"add-dependencies",level:3},{value:"Select a version",id:"select-a-version",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"setting-up-the-development-environment",children:"Setting Up the Development Environment"})}),"\n",(0,s.jsx)(n.p,{children:"A tutorial on how to set up your development workspace to work with Curios API interfaces and methods."}),"\n",(0,s.jsx)(n.h2,{id:"set-up-your-build-script",children:"Set up your build script"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"add-repository",children:"Add repository"}),"\n",(0,s.jsxs)(n.p,{children:["First, add the repository hosting the Curios API files by adding the following to your build script's\n",(0,s.jsx)(n.code,{children:"repositories"})," block:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:'repositories {\n  maven {\n    name = "Illusive Soulworks maven"\n    url = "https://maven.theillusivec4.top/"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"add-dependencies",children:"Add dependencies"}),"\n",(0,s.jsxs)(n.p,{children:["Secondly, add the Curios API dependencies to your build script's ",(0,s.jsx)(n.code,{children:"dependencies"})," block:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gradle",children:'dependencies {\n    // Compile against only the API artifact\n    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}:api"\n    // Use the full Curios API jar at runtime\n    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}"\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why compile against only the API artifact?"})}),(0,s.jsx)(n.p,{children:"Compiling against only the API artifact is recommended because the artifact only contains the public API packages,\ninterfaces, and methods. These are all intended to be stable and will not break within the same major version if used.\nThe same cannot be said about internal packages and methods, which may accidentally be used if the full jar is included\nduring compile time. Including the full jar at runtime still means that testing can occur normally in development."}),(0,s.jsxs)(n.p,{children:["If there is an internal package and or method you would like to use, please make a suggestion on the ",(0,s.jsx)(n.a,{href:"https://github.com/TheIllusiveC4/Curios/issues",children:"issue tracker"}),"\nso that it may potentially be included in the public API."]})]}),"\n",(0,s.jsx)(n.p,{children:"Remember to regenerate the run configurations after changing the settings."}),"\n",(0,s.jsx)(n.h2,{id:"select-a-version",children:"Select a version"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["If you followed the steps above, ",(0,s.jsx)(n.code,{children:"${curios_version}"})," should be defined so that it is replaced by the specific Curios API\nversion that you want to use. This property can be set up by including a mapping in the ",(0,s.jsx)(n.code,{children:"gradle.properties"})," file located\nin the same directory as the ",(0,s.jsx)(n.code,{children:"build.gradle"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["Please see ",(0,s.jsx)(n.a,{href:"https://www.curseforge.com/minecraft/mc-mods/curios/files",children:"CurseForge"}),", ",(0,s.jsx)(n.a,{href:"https://modrinth.com/mod/curios/versions",children:"Modrinth"}),",\nor the ",(0,s.jsx)(n.a,{href:"https://maven.theillusivec4.top/top/theillusivec4/curios/curios-forge/",children:"maven"})," for possible versions."]}),"\n",(0,s.jsxs)(n.p,{children:["Example in ",(0,s.jsx)(n.code,{children:"gradle.properties"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curios_version=5.3.1+1.20.1\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);