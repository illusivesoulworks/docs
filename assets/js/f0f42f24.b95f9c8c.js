"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[6985],{1679:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"curios/slots/slot-register","title":"Slot Types","description":"A tutorial on how to register and modify slot types that are recognized by Curios.","source":"@site/docs/curios/slots/slot-register.md","sourceDirName":"curios/slots","slug":"/curios/slots/slot-register","permalink":"/curios/slots/slot-register","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/slots/slot-register.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Slots","permalink":"/category/slots"},"next":{"title":"Entity Slot Types","permalink":"/curios/slots/entity-register"}}');var i=n(4848),o=n(8453);const r={sidebar_position:1},l="Slot Types",d={},a=[{value:"Overview",id:"overview",level:2},{value:"Directory",id:"directory",level:2},{value:"Syntax",id:"syntax",level:2},{value:"<strong>replace</strong> (boolean)",id:"replace-boolean",level:3},{value:"<strong>size</strong> (integer)",id:"size-integer",level:3},{value:"<strong>operation</strong> (<code>&quot;SET&quot;</code>|<code>&quot;ADD&quot;</code>|<code>&quot;REMOVE&quot;</code>)",id:"operation-setaddremove",level:3},{value:"<strong>order</strong> (integer)",id:"order-integer",level:3},{value:"<strong>icon</strong> (string)",id:"icon-string",level:3},{value:"<strong>add_cosmetic</strong> (boolean)",id:"add_cosmetic-boolean",level:3},{value:"<strong>use_native_gui</strong> (boolean)",id:"use_native_gui-boolean",level:3},{value:"<strong>render_toggle</strong> (boolean)",id:"render_toggle-boolean",level:3},{value:"<strong>drop_rule</strong> (<code>&quot;DEFAULT&quot;</code>|<code>&quot;ALWAYS_DROP&quot;</code>|<code>&quot;ALWAYS_KEEP&quot;</code>|<code>&quot;DESTROY&quot;</code>)",id:"drop_rule-defaultalways_dropalways_keepdestroy",level:3},{value:"<strong>validators</strong> (string[])",id:"validators-string",level:3},{value:"Example",id:"example",level:2},{value:"Modifying a Slot Type",id:"modifying-a-slot-type",level:2},{value:"Example",id:"example-1",level:3},{value:"Localization",id:"localization",level:2},{value:"Example",id:"example-2",level:3}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"slot-types",children:"Slot Types"})}),"\n",(0,i.jsx)(s.p,{children:"A tutorial on how to register and modify slot types that are recognized by Curios."}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["The recommended way to register a slot type is through a datapack. If a user or developer is unfamiliar with datapacks,\nit is recommended to read through the ",(0,i.jsx)(s.a,{href:"https://minecraft.fandom.com/wiki/Data_pack",children:"wiki page"})," in order to understand\nthe concept and structure before proceeding to the rest of this page."]}),"\n",(0,i.jsxs)(s.p,{children:["Alternatively, users can instead choose to use the ",(0,i.jsx)(s.a,{href:"../configuration#slot-configuration",children:"Curios configuration"})," to create\nand modify slot types. There are fewer features than those offered in the datapack method, but some users may find the\nprocess to be more straightforward."]}),"\n",(0,i.jsxs)(s.p,{children:["If using one of the ",(0,i.jsx)(s.a,{href:"./preset-slots",children:"Preset Slot Types"}),", this step can be skipped since Curios natively provides the\nneeded datapack registration."]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Why are my registered slot types not appearing?"})}),(0,i.jsxs)(s.p,{children:["Registering slot types makes them available for use; however, they are ",(0,i.jsx)(s.em,{children:"not"})," added to any entities (including players)\nby default. In order to add them to an entity, please refer to ",(0,i.jsx)(s.a,{href:"/curios/slots/entity-register",children:"the next step"})," on adding slot\ntypes to entities."]})]}),"\n",(0,i.jsx)(s.h2,{id:"directory",children:"Directory"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["The file should be a ",(0,i.jsx)(s.code,{children:".json"})," file with the ",(0,i.jsx)(s.code,{children:"identifier"})," for the slot type to be registered as the name. This file\nshould be located in the ",(0,i.jsx)(s.code,{children:"~/data/(namespace)/curios/slots/"})," folder of the datapack."]}),"\n",(0,i.jsxs)(s.p,{children:["Example: Registering a ",(0,i.jsx)(s.code,{children:"head"})," slot type requires creating a ",(0,i.jsx)(s.code,{children:"head.json"})," file located in ",(0,i.jsx)(s.code,{children:"~/data/(namespace)/curios/slots/"}),"\nso the final path should look like ",(0,i.jsx)(s.code,{children:"~/data/(namespace)/curios/slots/head.json"}),"."]}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"(namespace)"})," field should be replaced by the namespace chosen for this portion of the datapack. If this is a part\nof a mod, the namespace is usually the mod ID. If this is part of a user-defined datapack, then the namespace can be\nanything that is lowercased with no special characters."]})}),"\n",(0,i.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["The structure of the ",(0,i.jsx)(s.code,{children:".json"})," file for the slot type consists of a top-level JSON object that holds various fields\nrelated to that slot type."]}),"\n",(0,i.jsx)(s.p,{children:"All fields are optional unless otherwise noted. Each field denotes certain merging behavior which defines how the\nfield is merged between all data files that include it."}),"\n",(0,i.jsxs)(s.h3,{id:"replace-boolean",children:[(0,i.jsx)(s.strong,{children:"replace"})," (boolean)"]}),"\n",(0,i.jsxs)(s.p,{children:["When ",(0,i.jsx)(s.code,{children:"true"}),", replaces data from lower-priority datapacks."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:"false"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," N/A"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"size-integer",children:[(0,i.jsx)(s.strong,{children:"size"})," (integer)"]}),"\n",(0,i.jsx)(s.p,{children:"The number of slots of this slot type to give by default."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:"1"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," The highest size will be used."]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"operation-setaddremove",children:[(0,i.jsx)(s.strong,{children:"operation"})," (",(0,i.jsx)(s.code,{children:'"SET"'}),"|",(0,i.jsx)(s.code,{children:'"ADD"'}),"|",(0,i.jsx)(s.code,{children:'"REMOVE"'}),")"]}),"\n",(0,i.jsxs)(s.p,{children:["Whether to use ",(0,i.jsx)(s.code,{children:"size"})," to set, add, or remove from the total number of slots."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:'"SET"'})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," N/A"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"order-integer",children:[(0,i.jsx)(s.strong,{children:"order"})," (integer)"]}),"\n",(0,i.jsx)(s.p,{children:"The order the slots will appear in the native Curios GUI, lower numbers appear first."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:"1000"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," The lowest order will be used."]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"icon-string",children:[(0,i.jsx)(s.strong,{children:"icon"})," (string)"]}),"\n",(0,i.jsx)(s.p,{children:"The location of the icon to use for the slot type."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:'"curios:slot/empty_curios_slot"'})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," The last icon will be used."]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"add_cosmetic-boolean",children:[(0,i.jsx)(s.strong,{children:"add_cosmetic"})," (boolean)"]}),"\n",(0,i.jsx)(s.p,{children:"The location of the icon to use for the slot type."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:"false"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," ",(0,i.jsx)(s.code,{children:"true"})," if any data file sets this field to ",(0,i.jsx)(s.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"use_native_gui-boolean",children:[(0,i.jsx)(s.strong,{children:"use_native_gui"})," (boolean)"]}),"\n",(0,i.jsxs)(s.p,{children:["When ",(0,i.jsx)(s.code,{children:"false"}),", does not add the slot type to the native Curios GUI."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:"true"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," ",(0,i.jsx)(s.code,{children:"false"})," if any data file sets this field to ",(0,i.jsx)(s.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"render_toggle-boolean",children:[(0,i.jsx)(s.strong,{children:"render_toggle"})," (boolean)"]}),"\n",(0,i.jsxs)(s.p,{children:["When ",(0,i.jsx)(s.code,{children:"false"}),", does not allow the slot type to toggle its rendering."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:"true"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," ",(0,i.jsx)(s.code,{children:"false"})," if any data file sets this field to ",(0,i.jsx)(s.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"drop_rule-defaultalways_dropalways_keepdestroy",children:[(0,i.jsx)(s.strong,{children:"drop_rule"})," (",(0,i.jsx)(s.code,{children:'"DEFAULT"'}),"|",(0,i.jsx)(s.code,{children:'"ALWAYS_DROP"'}),"|",(0,i.jsx)(s.code,{children:'"ALWAYS_KEEP"'}),"|",(0,i.jsx)(s.code,{children:'"DESTROY"'}),")"]}),"\n",(0,i.jsxs)(s.p,{children:["Whether to drop, keep, destroy, or follow the ",(0,i.jsx)(s.code,{children:"keepCurios"})," configuration setting."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:'"DEFAULT"'})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," N/A"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"validators-string",children:[(0,i.jsx)(s.strong,{children:"validators"})," (string[])"]}),"\n",(0,i.jsxs)(s.p,{children:["The list of registered predicates from the Curios API used by this slot type to validate item insertions. For more\ninformation about validators, please see the page on ",(0,i.jsx)(s.a,{href:"../items/assign-slots#validators",children:"slot assignments"}),"."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"default:"})," ",(0,i.jsx)(s.code,{children:'["curios:tag"]'})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"merging:"})," Each entry is added into the final array."]}),"\n"]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsx)(s.p,{children:(0,i.jsxs)(s.strong,{children:["Which ",(0,i.jsx)(s.code,{children:"operation"})," value should I use?"]})}),(0,i.jsxs)(s.p,{children:["In most cases, ",(0,i.jsx)(s.code,{children:'"SET"'})," (also the default if no value is defined) will accomplish the desired result. It denotes that a\nslot type should have a certain amount of slots by default, with the highest value among all consumers being used.\n",(0,i.jsx)(s.code,{children:'"ADD"'}),"and ",(0,i.jsx)(s.code,{children:'"REMOVE"'})," are inherent slot modifiers and are based on the amount of slots specified by all ",(0,i.jsx)(s.code,{children:'"SET"'}),"\noperations, the result of which can change based on the mods/datapacks loaded."]})]}),"\n",(0,i.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "order": 20,\n  "size": 4,\n  "icon": "curios:slot/empty_custom_slot",\n  "add_cosmetic": true\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["This slot type will have a relatively low order of 20, which will make it appear higher than most slots. It also has\nsize of 4 which means that it will register 4 slots to any given entity by default. For the GUI, it uses an icon\nlocated at ",(0,i.jsx)(s.code,{children:"curios:slot/empty_custom_slot"}),". It also has added a cosmetic slot so there will be an additional slot for\ncosmetic items next to it in the Curios GUI."]}),"\n",(0,i.jsx)(s.h2,{id:"modifying-a-slot-type",children:"Modifying a Slot Type"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["The process of modifying a slot type is identical to registering a new slot type, except using the same ",(0,i.jsx)(s.code,{children:"identifier"})," as\nthe existing slot type. All slot types that share an ",(0,i.jsx)(s.code,{children:"identifier"})," will be merged according to the ",(0,i.jsx)(s.strong,{children:"Merge Behavior"})," of\neach field as outlined above."]}),"\n",(0,i.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsxs)(s.p,{children:["Curios natively provides data for the ",(0,i.jsx)(s.code,{children:"ring"})," slot, which defaults the size to 1. In order to increase the size to 2,\ncreate a ",(0,i.jsx)(s.code,{children:"ring.json"})," slot registration file in the datapack with the contents:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "size": 2\n}\n'})}),"\n",(0,i.jsx)(s.p,{children:"This will merge the size data of this registration with the existing registration provided by Curios, keeping all the\nother data intact while increasing the number of slots to 2."}),"\n",(0,i.jsx)(s.h2,{id:"localization",children:"Localization"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["By default, slot types do not come with localizations for the slot name. Only ",(0,i.jsx)(s.a,{href:"/curios/slots/preset-slots",children:"Preset Slot Types"})," come\nwith native localizations, provided by Curios itself. For other slot types, a resource pack with a language file will\nbe necessary in order to properly localize the slot name. If you are unfamiliar with resource packs, it is recommended\nto read through the ",(0,i.jsx)(s.a,{href:"https://minecraft.wiki/w/Resource_pack",children:"wiki page"})," in order to understand the concept and\nstructure."]}),"\n",(0,i.jsxs)(s.p,{children:["The localization key for slot types follow the format ",(0,i.jsx)(s.code,{children:"curios.identifier.name"})," with ",(0,i.jsx)(s.code,{children:"name"})," being the ",(0,i.jsx)(s.code,{children:"identifier"}),"\nregistered for the slot type. For example, the ",(0,i.jsx)(s.code,{children:"ring"})," slot's localization key would be ",(0,i.jsx)(s.code,{children:"curios.identifier.ring"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"example-2",children:"Example"}),"\n",(0,i.jsxs)(s.p,{children:["To localize a slot type with the identifier ",(0,i.jsx)(s.code,{children:"custom"})," to the ",(0,i.jsx)(s.code,{children:"en_us"})," localization, a ",(0,i.jsx)(s.code,{children:"assets/(namespace)/lang"})," folder\nneeds to be created in the resource pack with a ",(0,i.jsx)(s.code,{children:"en_us.json"})," inside with the contents:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "curios.identifier.custom": "Custom Slot"\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var t=n(6540);const i={},o=t.createContext(i);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);