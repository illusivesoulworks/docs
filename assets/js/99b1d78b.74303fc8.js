"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[4503],{1097:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"curios/items/rendering-registry","title":"Rendering a Curio","description":"A tutorial on how to run rendering code when a specific curio item is equipped on an entity.","source":"@site/docs/curios/items/rendering-registry.md","sourceDirName":"curios/items","slug":"/curios/items/rendering-registry","permalink":"/curios/items/rendering-registry","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/items/rendering-registry.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Assigning Slots","permalink":"/curios/items/assign-slots"},"next":{"title":"Curios Attribute Modifiers (NBT)","permalink":"/curios/items/curios-nbt"}}');var t=r(4848),o=r(8453);const s={sidebar_position:8},d="Rendering a Curio",a={},c=[{value:"Create an <code>ICurioRenderer</code>",id:"create-an-icuriorenderer",level:2},{value:"Register your renderer",id:"register-your-renderer",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rendering-a-curio",children:"Rendering a Curio"})}),"\n",(0,t.jsx)(n.p,{children:"A tutorial on how to run rendering code when a specific curio item is equipped on an entity."}),"\n",(0,t.jsxs)(n.h2,{id:"create-an-icuriorenderer",children:["Create an ",(0,t.jsx)(n.code,{children:"ICurioRenderer"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"top.theillusivec4.curios.api.client"})," package, you'll find an interface called ",(0,t.jsx)(n.code,{children:"ICurioRenderer"}),". This interface\nneeds to be implemented on an object of your choice, as its ",(0,t.jsx)(n.code,{children:"render"})," method is what will be called to run your rendering\ncode later."]}),"\n",(0,t.jsxs)(n.p,{children:["For the full guide on the interface, see ",(0,t.jsx)(n.a,{href:"/curios/api/renderer-interface",children:"here"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class MyCurioRenderer implements ICurioRenderer {\n  \n  @Override\n  public <T extends LivingEntity, M extends EntityModel<T>> void render(ItemStack stack,\n                                                                        SlotContext slotContext,\n                                                                        PoseStack matrixStack,\n                                                                        RenderLayerParent<T, M> renderLayerParent,\n                                                                        MultiBufferSource renderTypeBuffer,\n                                                                        int light, float limbSwing,\n                                                                        float limbSwingAmount,\n                                                                        float partialTicks,\n                                                                        float ageInTicks,\n                                                                        float netHeadYaw,\n                                                                        float headPitch) {\n    // Render code goes here\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"register-your-renderer",children:"Register your renderer"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Once you have an implementation of ",(0,t.jsx)(n.code,{children:"ICurioRenderer"}),", you need to register an instance of that to an item. This is done\nby calling the ",(0,t.jsx)(n.code,{children:"register"})," method in ",(0,t.jsx)(n.code,{children:"top.theillusivec4.curios.api.client.CuriosRendererRegistry"})," during the\n",(0,t.jsx)(n.code,{children:"FMLClientSetupEvent"})," in mod loading."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Mod("CurioMod")\npublic class CurioMod {\n  \n  public CurioMod(final IEventBus eventBus) {\n    eventBus.addListener(this::clientSetup);\n  }\n\n  private void clientSetup(final FMLClientSetupEvent evt) {\n    CuriosRendererRegistry.register(CurioModItems.MY_ITEM, () -> new MyCurioRenderer());\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Multiple items are allowed to share a renderer instance or type. This can be handy if your ",(0,t.jsx)(n.code,{children:"ICurioRenderer"}),"\nimplementation shares a lot of common code or if your items have very similar renders, in which case you may find it\nadvantageous to simply register those items with a single renderer rather than multiple."]})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var i=r(6540);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);