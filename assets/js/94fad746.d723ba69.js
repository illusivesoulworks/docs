"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[8570],{5180:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"champions/nbt","title":"NBT Tags","description":"As an alternative to the convenient but limited summoning methods outlined in Commands, Champions provides a way to specify rank and affix data directly through NBT tags.","source":"@site/versioned_docs/version-1.18.x/champions/nbt.md","sourceDirName":"champions","slug":"/champions/nbt","permalink":"/1.18.x/champions/nbt","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/versioned_docs/version-1.18.x/champions/nbt.md","tags":[],"version":"1.18.x","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Commands","permalink":"/1.18.x/champions/commands"},"next":{"title":"Mod Integrations","permalink":"/1.18.x/category/mod-integrations"}}');var s=i(4848),o=i(8453);const r={sidebar_position:7},a="NBT Tags",l={},h=[{value:"NBT Structure",id:"nbt-structure",level:2},{value:"Examples",id:"examples",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"nbt-tags",children:"NBT Tags"})}),"\n",(0,s.jsxs)(e.p,{children:["As an alternative to the convenient but limited summoning methods outlined in ",(0,s.jsx)(e.a,{href:"commands",children:"Commands"}),", Champions provides a way to specify rank and affix data directly through NBT tags."]}),"\n",(0,s.jsx)(e.p,{children:"Upon spawning, the Champions data from the NBT tags will be read, applied, and then removed."}),"\n",(0,s.jsx)(e.h2,{id:"nbt-structure",children:"NBT Structure"}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"ForgeData"}),": Serves as the root tag.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"ChampionsData"}),": Serves as the sub-root tag.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"tier"}),": The tier of the rank to assign to the champion entity. Can be an integer or an object with the following structure:","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"min"}),": The minimum tier of the rank to assign to the champion entity. Must be equal to or lower than ",(0,s.jsx)(e.strong,{children:"max"}),". If absent, there is no minimum."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"max"}),": The maximum tier of the rank to assign to the champion entity. Must be equal to or higher than ",(0,s.jsx)(e.strong,{children:"min"}),". If absent, there is no maximum."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"affixes"}),": The affixes to assign to the champion entity. Can be a list of affix identifiers as strings or an object with the following structure:","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"values"}),": A list of affix identifiers for affixes to assign to the champion entity."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"count"}),": The total number of affixes to assign to the champion entity. If absent, the default number from the rank configuration will be used."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["To summon a tier 3 champion ",(0,s.jsx)(e.a,{href:"https://minecraft.fandom.com/wiki/Spider",children:"spider"})," entity with the Enkindling affix:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'summon spider ~ ~ ~ {ForgeData:{ChampionsData:{tier:3,affixes:{values:["enkindling"],count:1}}}}'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["To summon a tier 2 champion ",(0,s.jsx)(e.a,{href:"https://minecraft.fandom.com/wiki/Skeleton",children:"skeleton"})," entity with the Hasty affix and 2 random affixes:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'summon skeleton ~ ~ ~ {ForgeData:{ChampionsData:{tier:2,affixes:{values:["hasty"],count:3}}}}'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["To summon a tier 4 champion ",(0,s.jsx)(e.a,{href:"https://minecraft.fandom.com/wiki/Zombie",children:"zombie"})," entity with random affixes:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"summon zombie ~ ~ ~ {ForgeData:{ChampionsData:{tier:4}}}"})}),"\n"]}),"\n"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var t=i(6540);const s={},o=t.createContext(s);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);