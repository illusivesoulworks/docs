"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[283],{2570:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"veinmining/block-groups","title":"Assigning Block Groups","description":"A tutorial on how to assign blocks to groups so that they are vein mined together when applicable.","source":"@site/versioned_docs/version-1.20.x/veinmining/block-groups.md","sourceDirName":"veinmining","slug":"/veinmining/block-groups","permalink":"/1.20.x/veinmining/block-groups","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/versioned_docs/version-1.20.x/veinmining/block-groups.md","tags":[],"version":"1.20.x","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Vein Mining","permalink":"/1.20.x/category/vein-mining"}}');var r=i(4848),o=i(8453);const t={sidebar_position:1},a="Assigning Block Groups",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Example",id:"example",level:3},{value:"Datapack",id:"datapack",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example-1",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"assigning-block-groups",children:"Assigning Block Groups"})}),"\n",(0,r.jsx)(n.p,{children:"A tutorial on how to assign blocks to groups so that they are vein mined together when applicable."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Block groups are used by Vein Mining to determine which blocks should be vein mined together if they are next to each\nother but are not the same type of block. This is useful when there are different blocks in a world that share\nenough similar characteristics that they should be vein mined together and not separately. For example, ores and their\ndeepslate versions are functionally identical. As such, Vein Mining configures these groupings natively already."}),"\n",(0,r.jsx)(n.p,{children:"These groups can be configured through the configuration file or through datapacks, allowing both modpack developers and\nmod developers to specify which groupings should apply within their specific environment."}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["The configuration field for block groups is located in the ",(0,r.jsx)(n.code,{children:"veinmining-server.toml"})," file in the ",(0,r.jsx)(n.code,{children:"config"})," folder in the\nroot Minecraft instance folder."]}),"\n",(0,r.jsxs)(n.p,{children:["The field is called ",(0,r.jsx)(n.code,{children:"groupsList"})," and will, by default, be auto-populated with a list of common ore tags so that similar\nores can be vein mined together."]}),"\n",(0,r.jsx)(n.p,{children:"This is represented as a list of strings, and each string is a group entry with blocks IDs or tags seperated by a\nsemicolon."}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'groupsList = ["minecraft:grass_block;minecraft:dirt", "minecraft:diamond_ore;minecraft:emerald_ore"]\n'})}),"\n",(0,r.jsx)(n.p,{children:"These entries specify two different groups:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Group 1 - Grass blocks and dirt blocks"}),"\n",(0,r.jsx)(n.li,{children:"Group 2 - Diamond ores and emerald ores"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This means that, when vein mined, grass blocks and dirt blocks will be vein mined together. This applies regardless of\nwhich block is the origin block. The same will apply to diamond ores and emerald ores."}),"\n",(0,r.jsx)(n.h2,{id:"datapack",children:"Datapack"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["Block groups can be specified purely through datapacks, allowing specifications to be applied without depending on Vein\nMining directly. The data file should be created as ",(0,r.jsx)(n.code,{children:"~/data/(namespace)/veinmining/groups.json"})," in the datapack."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"(namespace)"})," field should be replaced by the namespace chosen for this portion of the datapack. If this is a part\nof a mod, the namespace is usually the mod ID. If this is part of a user-defined datapack, then the namespace can be\nanything that is lowercased with no special characters."]})}),"\n",(0,r.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsxs)(n.p,{children:["The structure of the ",(0,r.jsx)(n.code,{children:".json"})," file for the groups consists of a top-level JSON object that holds various fields\nrelated to the groups specifications."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"replace"})}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"If true, replaces all entries on lower-priority datapacks with this one"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"groups"})}),(0,r.jsx)(n.td,{children:"string[]"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"The list of block groups represented as an array of string arrays of block IDs or tags"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "replace": false,\n  "groups": [\n    ["minecraft:grass_block", "minecraft:dirt"],\n    ["minecraft:diamond_ore", "minecraft:emerald_ore"]\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Same as the example from ",(0,r.jsx)(n.a,{href:"#-example",children:"the previous section"}),", this ",(0,r.jsx)(n.code,{children:"groups.json"})," file specifies two different groups:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Group 1 - Grass blocks and dirt blocks"}),"\n",(0,r.jsx)(n.li,{children:"Group 2 - Diamond ores and emerald ores"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This means that, when vein mined, grass blocks and dirt blocks will be vein mined together. This applies regardless of\nwhich block is the origin block. The same will apply to diamond ores and emerald ores."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const r={},o=s.createContext(r);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);