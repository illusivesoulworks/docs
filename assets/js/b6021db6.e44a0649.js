"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[9538],{8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}},8791:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"curios/porting/1211to1214","title":"1.21.1 to 1.21.4/1.21.5","description":"This is an overview on the breaking changes, deprecations, and future development plans for Curios on 1.21.4/1.21.5. This document","source":"@site/docs/curios/porting/1211to1214.md","sourceDirName":"curios/porting","slug":"/curios/porting/1211to1214","permalink":"/curios/porting/1211to1214","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/porting/1211to1214.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Porting","permalink":"/category/porting"}}');var r=i(4848),t=i(8453);const l={sidebar_position:1},o="1.21.1 to 1.21.4/1.21.5",d={},c=[{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Non-Deprecated",id:"non-deprecated",level:3},{value:"Previously Deprecated",id:"previously-deprecated",level:3},{value:"Deprecations",id:"deprecations",level:2},{value:"<code>CuriosApi</code>",id:"curiosapi",level:3},{value:"Items",id:"items",level:3},{value:"Rendering",id:"rendering",level:3},{value:"Events",id:"events",level:3},{value:"Others",id:"others",level:3},{value:"Development Plans",id:"development-plans",level:2},{value:"Inventory Refactor",id:"inventory-refactor",level:3},{value:"<code>ICurioItem</code> Consolidation",id:"icurioitem-consolidation",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"1211-to-12141215",children:"1.21.1 to 1.21.4/1.21.5"})}),"\n",(0,r.jsx)(n.p,{children:"This is an overview on the breaking changes, deprecations, and future development plans for Curios on 1.21.4/1.21.5. This document\naims to be exhaustive and list every relevant change in each section. If there are any missing pieces of information, please\nsubmit a PR to this repository or initiate a support request in the Discord server."}),"\n",(0,r.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"non-deprecated",children:"Non-Deprecated"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ICurioRenderer#render"})," (parameter change)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsx)(n.p,{children:"The changes in rendering in Minecraft made it necessary to change the parameters to accommodate. Everything else about the method is\nunchanged so developers will just need to adjust the parameters and their implementations accordingly."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Class"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DropRule"})," (package change)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"DropRule"})," has been moved to its own package in ",(0,r.jsx)(n.code,{children:"top.theillusivec4.curios.api.common.DropRule"})," as opposed to its previous location\nas an inner enum in ",(0,r.jsx)(n.code,{children:"top.theillusivec4.curios.api.type.ICurio"}),". This was not a necessary change for this version, however ",(0,r.jsx)(n.code,{children:"ICurio"})," is\nbeing planned for future deprecation and, since ",(0,r.jsx)(n.code,{children:"DropRule"})," would still be needed, it was decided to separate it now into its own\npackage rather than later so that deprecation can occur without affecting the enum itself."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CurioAttributeModifierEvent"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getId"})," (removed)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getSlotContext"})," (removed)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"CurioAttributeModifierEvent"})," event has been refactored to better accommodate the new internal changes to curio attribute modifiers,\nwhich have now fully moved from ",(0,r.jsx)(n.code,{children:"Multimap<Holder<Attribute>>, AttributeModifier>"})," instances to the ",(0,r.jsx)(n.code,{children:"CurioAttributeModifiers"})," data\ncomponent. Some of these changes are also to better align with NeoForge's ",(0,r.jsx)(n.code,{children:"ItemAttributeModifierEvent"}),", which this event is based on."]}),"\n",(0,r.jsxs)(n.p,{children:["These specific methods were removed due to the fact that, since this event fires with a ",(0,r.jsx)(n.code,{children:"CurioAttributeModifiers"})," context now, there is\nno longer any reference to a specific ",(0,r.jsx)(n.code,{children:"SlotContext"})," or ",(0,r.jsx)(n.code,{children:"ResourceLocation"})," and modifiers are instead added with a slot types or predicates\nat the time of addition."]}),"\n",(0,r.jsx)(n.h3,{id:"previously-deprecated",children:"Previously Deprecated"}),"\n",(0,r.jsx)(n.p,{children:"The following methods and classes were deprecated previously and have been removed in this version:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Classes"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ISlotHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"IIconHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ICuriosHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"SlotTypeMessage"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"SlotTypePreset"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Methods"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ICurio"})," and ",(0,r.jsx)(n.code,{children:"ICurioItem"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSlotsTooltip"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getAttributeModifiers(SlotContext, UUID)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getDropRule(SlotContext, DamageSource, int, boolean)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getAttributesTooltip"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SoundInfo"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSoundEvent"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getVolume"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getPitch"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CuriosApi"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSlot(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSlotIcon(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSlots"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getEntitySlots(EntityType<?>)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getPlayerSlots"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getItemStackSlots"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"setIconHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getIconHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"setCuriosHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getCuriosHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"setSlotHelper"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSlotHelper"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ICuriosItemHandler"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getLockedSlots"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"unlockSlotType"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"lockSlotType"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"processSlots"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getFortuneBonus"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"growSlotType"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"shrinkSlotType"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ICurioStacksHandler"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getSizeShift"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"grow"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"shrink"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ISlotType"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"isLocked"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"getPriority"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"isVisible"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ISlotData"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"operation(AttributeModifier.Operation)"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"deprecations",children:"Deprecations"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"curiosapi",children:(0,r.jsx)(n.code,{children:"CuriosApi"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Methods"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getSlot(String, Level)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getSlot(String, boolean)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getSlotType(String, boolean)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getSlots(Level)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getSlots(boolean)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getSlotTypes(boolean)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getPlayerSlots(Level)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getPlayerSlots(boolean)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getDefaultEntitySlotTypes(boolean)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getPlayerSlots(Player)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getEntitySlots(LivingEntity)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getDefaultEntitySlotTypes(LivingEntity)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getEntitySlots(EntityType<?>, Level)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getEntitySlots(EntityType<?>, boolean)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getDefaultEntitySlotTypes(EntityType<?>, boolean)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getItemStackSlots(ItemStack, Level)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getItemStackSlots(ItemStack, boolean)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getItemSlotTypes(ItemStack, boolean)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getItemStackSlots(ItemStack, LivingEntity)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getItemSlotTypes(ItemStack, LivingEntity)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getAttributeModifiers"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"ICurioItem#getAttributeModifiers(ItemStack)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"addSlotModifier(Multimap<Holder<Attribute>, AttributeModifier>, String, ResourceLocation, double, AttributeModifier.Operation)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"addSlotModifier(ItemStack, String, ResourceLocation, double, AttributeModifier.Operation, String)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"addModifier"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CurioAttributeModifiers"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"withSlotModifier"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Replaced by: None, replacement functionality still pending implementation."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"registerCurioPredicate"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#registerPredicate"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getCurioPredicate"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getPredicate"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"getCurioPredicates"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#getPredicates"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"testPredicates"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes#testPredicates"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsxs)(n.p,{children:["These deprecations serve as the first part of future plans to deprecate the entirety of the ",(0,r.jsx)(n.code,{children:"CuriosApi"})," class. The purpose is to avoid\nhaving disparate methods all in the same class, while also increasing discovery for these methods by categorizing them appropriately\ninto separate delegate classes. The new ",(0,r.jsx)(n.code,{children:"CuriosSlotTypes"})," class will serve as the functional replacement for the methods in this class\nand also the methods in the removed ",(0,r.jsx)(n.code,{children:"ISlotHelper"})," class, with logic related to one or more slot types. In addition, ",(0,r.jsx)(n.code,{children:"ICurioItem"})," and\n",(0,r.jsx)(n.code,{children:"CurioAttributeModifiers"})," will handle curio attribute modifiers depending on which is more appropriate."]}),"\n",(0,r.jsx)(n.h3,{id:"items",children:"Items"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Methods"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ICurio"})," and ",(0,r.jsx)(n.code,{children:"ICurioItem"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getAttributeModifiers(SlotContext, UUID)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"getDefaultCurioAttributeModifiers"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsxs)(n.p,{children:["These deprecations follow the new internal changes to curio attribute modifiers, which have now fully moved from\n",(0,r.jsx)(n.code,{children:"Multimap<Holder<Attribute>>, AttributeModifier>"})," instances to the ",(0,r.jsx)(n.code,{children:"CurioAttributeModifiers"})," data component. Due to this, the original\nattribute modifier methods that utilize maps are no longer recommended in favor of a new one that uses the component class instead."]}),"\n",(0,r.jsx)(n.h3,{id:"rendering",children:"Rendering"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Class"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"CuriosRendererRegistry"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Methods"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"CuriosRendererRegistry"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"register"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"ICurioRenderer#register"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getRenderer"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"ICurioRenderer#get"})," and ",(0,r.jsx)(n.code,{children:"ICurioRenderer#getOrNull"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsx)(n.p,{children:"These methods and the class have all been deprecated. This decision was made to streamline both discovery and usage by relocating\nthese methods to the interface that developers use most directly. The deprecated class simply redirects its methods to the new methods,\nso while they are candidates for removal in future breaking versions they are not high-priority targets and will likely remain for\nseveral versions since these methods are the primary ones used by developers."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Methods"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"ICurioRenderer"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"translateIfSneaking"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rotateIfSneaking"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"followHeadRotations"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"followBodyRotations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"ICurioRenderer#setupHumanoidAnimations"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsxs)(n.p,{children:["These utility methods in the ",(0,r.jsx)(n.code,{children:"ICurioRenderer"})," interface have been deprecated. Due to the rendering changes in Minecraft and the\nbreaking changes in the ",(0,r.jsx)(n.code,{children:"render"})," method, a new method ",(0,r.jsx)(n.code,{children:"setupHumanoidAnimations"})," has been created to both accommodate these\nchanges and create a more complete a robust solution to humanoid animations on models. The utility methods before were functional\nbut clunky to use and didn't always function as expected due to the intermingling of different parts and hardcoded values. The\nnew method simply takes a model, provided by the implementation, and a render state, provided by the ",(0,r.jsx)(n.code,{children:"render"})," parameters, and\nwill do all of the necessary transformations previously enabled by the deprecated methods."]}),"\n",(0,r.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Methods"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"CurioAttributeModifierEvent"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getModifiers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"getImmutableModifiers"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getOriginalModifiers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"getDefaultModifiers"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"removeModifier(Holder<Attribute>, AttributeModifier)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"removeModifier(Holder<Attribute>, ResourceLocation)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"removeAttribute(Holder<Attribute>)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"removeAllModifiersFor(Holder<Attribute>)"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsx)(n.p,{children:"These deprecations follow the breaking changes to the class noted above."}),"\n",(0,r.jsx)(n.h3,{id:"others",children:"Others"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"ICurioSlotExtension#getSlotTooltip(SlotContext, TooltipFlag)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"ICurioSlotExtension#getSlotTooltip(SlotContext, List<Component>, TooltipFlag)"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsx)(n.p,{children:"This method is replaced by a better one that receives the original tooltip, allowing for potential modification or checking."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Method"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"ISlotType#getIdentifier"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replaced by: ",(0,r.jsx)(n.code,{children:"ISlotType#getId"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsx)(n.p,{children:"This method is simply replaced by a more concisely named one. This is one of the few deprecations not marked for removal, since\nits continuity adds no future maintenance burden or concerns."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Class"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"CuriosTooltip"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All methods"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Description"})}),"\n",(0,r.jsx)(n.p,{children:"Due to the transition to using NeoForge's native tooltip utilities and events, this class no longer serves an effective function\nand is thus deprecated."}),"\n",(0,r.jsx)(n.h2,{id:"development-plans",children:"Development Plans"}),"\n",(0,r.jsx)(n.p,{children:"These are broad outlines for plans and ideas for future development that are considered high-priority but with no target version\nor date in mind for their completion."}),"\n",(0,r.jsx)(n.h3,{id:"inventory-refactor",children:"Inventory Refactor"}),"\n",(0,r.jsx)(n.p,{children:"Although there have been various updates, features, and changes to the curio inventory system, a lot of the foundations have remained\nthe same since its inception. This is partially due to the work involved in rewriting it, but also because rewriting it would\nsubsequently affect many other parts of the API in a way that would ultimately culminate in a rather large recoding burden for developers.\nFor those reasons, plans to fundamentally redesign the inventory were put on hold for a long time."}),"\n",(0,r.jsx)(n.p,{children:"However, the current system has now reached the limits of what it's capable of and is also now limiting the capabilities of the API\nas some recent attempts to implement specific new features proved either difficult or impossible. So the current plans are to\nrefactor the whole inventory system, and to try and do so in a way that leads to the least amount of breaking changes between versions\nin order to allow developers time to update as needed."}),"\n",(0,r.jsxs)(n.p,{children:["Specifically, this would mostly target the ",(0,r.jsx)(n.code,{children:"ICuriosItemHandler"}),", ",(0,r.jsx)(n.code,{children:"ICurioStacksHandler"}),", and ",(0,r.jsx)(n.code,{children:"IDynamicStackHandler"})," interfaces in the API.\nBecause of how intricately linked these interfaces are to the inventory, breaking changes are inevitable. It's likely that ",(0,r.jsx)(n.code,{children:"ICurioStacksHandler"}),"\nand ",(0,r.jsx)(n.code,{children:"IDynamicStackHandler"})," will see a removal once the refactor is done, as deprecation would be difficult or impossible. Conversely,\n",(0,r.jsx)(n.code,{children:"ICuriosItemHandler"})," could potentially continue to exist through a wrapper implementation around the new inventory system."]}),"\n",(0,r.jsxs)(n.p,{children:["As mentioned previously, these changes would also likely have ramifications across the entire API, particularly any points that touch\nthe inventory system. The most prominent example being ",(0,r.jsx)(n.code,{children:"SlotContext"}),", which may see changes or even replacement depending on what\nthe final implementation looks like."]}),"\n",(0,r.jsxs)(n.h3,{id:"icurioitem-consolidation",children:[(0,r.jsx)(n.code,{children:"ICurioItem"})," Consolidation"]}),"\n",(0,r.jsxs)(n.p,{children:["There currently exists two separate interfaces for curio items, ",(0,r.jsx)(n.code,{children:"ICurio"})," and ",(0,r.jsx)(n.code,{children:"ICurioItem"}),". This wasn't the intended design at first, but\nbecame necessary in order to meet the needs of both direct implementations and capability-based ones."]}),"\n",(0,r.jsxs)(n.p,{children:["However, having two interfaces leads to more confusion and a lot of redundancy in the API to accommodate them. In addition, having two\nis not strictly necessary to provide the functionality that they were intended for. So the current plans are to merge them both and\nleave only ",(0,r.jsx)(n.code,{children:"ICurioItem"}),", which will also help consolidate some curio-based utility methods into the same interface."]}),"\n",(0,r.jsxs)(n.p,{children:["This would likely occur before the above-mentioned inventory refactor, due to the presence of ",(0,r.jsx)(n.code,{children:"SlotContext"})," in many of the method\nparameters in these classes. If ",(0,r.jsx)(n.code,{children:"SlotContext"})," is changed due to the inventory refactor, it would only require updating/deprecating one\nclass rather than two."]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);