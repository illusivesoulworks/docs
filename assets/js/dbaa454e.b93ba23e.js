"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[1295],{28:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"curios/inventory/basic-inventory","title":"Basic Inventory Management","description":"Learn how to access and manage the Curios inventory attached to an entity.","source":"@site/docs/curios/inventory/basic-inventory.md","sourceDirName":"curios/inventory","slug":"/curios/inventory/basic-inventory","permalink":"/curios/inventory/basic-inventory","draft":false,"unlisted":false,"editUrl":"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/inventory/basic-inventory.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Inventory","permalink":"/category/inventory"},"next":{"title":"API","permalink":"/category/api"}}');var i=t(4848),s=t(8453);t(5537),t(9329);const a={sidebar_position:1},o="Basic Inventory Management",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Using the inventory",id:"using-the-inventory",level:2},{value:"Accessing the inventory",id:"accessing-the-inventory",level:2},{value:"Accessing the entire inventory",id:"accessing-the-entire-inventory",level:3},{value:"Accessing an inventory for a slot type",id:"accessing-an-inventory-for-a-slot-type",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"basic-inventory-management",children:"Basic Inventory Management"})}),"\n",(0,i.jsx)(n.p,{children:"Learn how to access and manage the Curios inventory attached to an entity."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Each entity that has been assigned any number of slot types based on ",(0,i.jsx)(n.a,{href:"/curios/slots/entity-register",children:"entity registration"}),"\nwill automatically gain a Curios inventory, initialized with a sub-inventory for each slot type that has been assigned.\nThis inventory can be used for a variety of purposes, such as finding out which items are held in the inventory or\nmodifying the number of slots that are in each sub-inventory."]}),"\n",(0,i.jsxs)(n.p,{children:["The interface for the Curios inventory can be found as ",(0,i.jsx)(n.code,{children:"top.theillusivec4.curios.api.type.capability.ICuriosItemHandler"}),",\nwhich holds all of the methods that developers can use to access and manage the inventory."]}),"\n",(0,i.jsx)(n.h2,{id:"using-the-inventory",children:"Using the inventory"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["To begin using the inventory, developers will need to grab the instance associated with each entity. The\n",(0,i.jsx)(n.code,{children:"top.theillusivec4.curios.api.CuriosApi"})," class has a ",(0,i.jsx)(n.code,{children:"getCuriosInventory"})," method that can be used:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"Optional<ICuriosItemHandler> maybeCuriosInventory = CuriosApi.getCuriosInventory(livingEntity);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The query returns a ",(0,i.jsx)(n.code,{children:"Optional"})," as the specified entity may not have a curios inventory. If the result is certain to\nexist, then the optionality can be disregarded and simplified to:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"ICuriosItemHandler curiosInventory = CuriosApi.getCuriosInventory(livingEntity).get();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Since the method returns an ",(0,i.jsx)(n.code,{children:"Optional"})," by default, developers will need to make sure to use ",(0,i.jsx)(n.code,{children:"Optional#ifPresent"})," first\nin order to check that the inventory actually exists:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"CuriosApi.getCuriosInventory(livingEntity).ifPresent(curiosInventory -> {\n  // code here - with access to the inventory instance that now definitely exists\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Once a developer has the ",(0,i.jsx)(n.code,{children:"ICuriosItemHandler"})," instance, they can use the methods from that instance to interact with the\nCurios inventory."]}),"\n",(0,i.jsx)(n.h2,{id:"accessing-the-inventory",children:"Accessing the inventory"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"As mentioned previously, each slot type assigned to an entity is given a sub-inventory in the Curios inventory to\nprovide easy and categorical access. There are two main ways to interact with these slot inventories, depending on\nwhether the developer wants to access all of the slot inventories or just a particular one."}),"\n",(0,i.jsx)(n.h3,{id:"accessing-the-entire-inventory",children:"Accessing the entire inventory"}),"\n",(0,i.jsxs)(n.p,{children:["The entire Curios inventory exists as a ",(0,i.jsx)(n.code,{children:"Map<String, ICurioStackHandler>"}),", with the slot type identifiers acting as each\nkey and the ",(0,i.jsx)(n.code,{children:"ICurioStackHandler"})," acting as the inventory attached to the slot type. To access this, the ",(0,i.jsx)(n.code,{children:"getCurios"}),"\nmethod can be used:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"Map<String, ICurioStackHandler> curios = curiosInventory.getCurios();\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["This returns an ",(0,i.jsx)(n.strong,{children:"unmodifiable"})," map so attempts to change the structure of the map directly through this method, such\nas adding or removing slot inventories, will not work. Any changes to the structure needs to be done through other\nmethods, this method is primarily for accessing the list of slot inventories on the entity."]})}),"\n",(0,i.jsx)(n.p,{children:"From here, developers can either iterate through the entire map:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"curios.forEach((identifier, slotInventory) -> {\n  // code here - with the identifier and slot inventory access\n})\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or developers can access a particular sub-inventory, such as a slot type with the ",(0,i.jsx)(n.code,{children:'"ring"'})," identifier:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'ICurioStackHandler slotInventory = curios.get("ring");\n\n// null check to ensure that the slot inventory exists\nif (slotInventory != null) {\n  // code here\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"However, if all a developer wants is to access a particular sub-inventory, there's a more straightforward method\noutlined in the next section that can be used instead."}),"\n",(0,i.jsx)(n.h3,{id:"accessing-an-inventory-for-a-slot-type",children:"Accessing an inventory for a slot type"}),"\n",(0,i.jsx)(n.p,{children:"In order to access a particular inventory for slot type, developers can either access the whole inventory as outlined\nin the preceding section or skip straight to a sub-inventory for that slot type:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'Optional<ICurioStackHandler> slotInventory = curiosInventory.getStacksHandler("ring");\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The above code will retrive an ",(0,i.jsx)(n.code,{children:"Optional"})," for the slot inventory with the ",(0,i.jsx)(n.code,{children:'"ring"'})," identifier passed into the\nparameter. This is an ",(0,i.jsx)(n.code,{children:"Optional"})," because the slot inventory being queried may not exist on the entity, which is a\npossibility that developers must consider because higher-priority datapacks are capable of removing slot types from\nentities. For that reason, be sure to use ",(0,i.jsx)(n.code,{children:"ifPresent"})," before accessing the inventory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'curiosInventory.getStacksHandler("ring").ifPresent(slotInventory -> {\n  // code here - with access to the slot inventory with the "ring" identifier\n});\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),i=t(4164),s=t(5627),a=t(6347),o=t(372),c=t(604),l=t(1861),u=t(8749);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function v(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=d(e),[a,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!v({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[l,h]=p({queryString:t,groupId:i}),[y,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,u.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),m=(()=>{const e=l??y;return v({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{m&&c(m)}),[m]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!v({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),g(e)}),[h,g,s]),tabValues:s}}var g=t(9136);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=c.indexOf(n),i=o[t].value;i!==r&&(l(n),a(i))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:u,...s,className:(0,i.A)("tabs__item",m.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function j(e){const n=y(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",m.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(x,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,f.jsx)(j,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var r=t(4164);const i={tabItem:"tabItem_Ymn6"};var s=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,a),hidden:t,children:n})}}}]);